pipeline {
    agent any
    environment {
        CI = 'true'
        ARTIFACTORY_SERVER_ID = 'tema-final-1-job-1'
        DOCKER_HUB_CREDENTIALS = credentials('docker-hub-credentials') // Configure as credenciais do Docker Hub no Jenkins
    }
    stages {
        stage('Download Artifact from Artifactory') {
            steps {
                script {
                    def jfrogPassword = credentials('token_jfrog')
                    def jfrogUrl = 'http://artifactory:8082/artifactory/tema-final-1-job-1/Tema-final-1-0.0.1-SNAPSHOT.jar'
                    def downloadPath = "${env.WORKSPACE}/Tema-final-1-0.0.1-SNAPSHOT.jar"

                    // Use o comando 'curl' no ambiente de script
                    sh "curl -u admin:$jfrogPassword -o $downloadPath $jfrogUrl"
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    def packerTemplatePath = "${env.WORKSPACE}/packer-template.json"
                    def packerOutputPath = "${env.WORKSPACE}/docker-image"

                    // Crie um arquivo de modelo Packer que use o Ansible para criar a imagem do Docker
                    writeFile file: packerTemplatePath, text: '''
                    {
                      "builders": [{
                        "type": "docker",
                        "image": "ubuntu",
                        "commit": true,
                        "changes": [
                          "CMD [ \"/bin/bash\" ]"
                        ]
                      }],
                      "provisioners": [{
                        "type": "ansible",
                        "playbook_file": "job-2/ansible-playbook.yml"
                      }]
                    }
                    '''

                    // Crie um arquivo Ansible playbook (ansible-playbook.yml) que configura a imagem do Docker

                    // Execute o Packer para criar a imagem
                    sh "packer build -var 'artefact_path=$downloadPath' $packerTemplatePath"

                    // Carregue a imagem do Docker no Docker Hub
                    sh "docker login -u $DOCKER_HUB_CREDENTIALS_USR -p $DOCKER_HUB_CREDENTIALS_PSW"
                    sh "docker tag ubuntu brunnadocker/brunna-tema-final-1"
                    sh "docker push brunnadocker/brunna-tema-final-1"
                }
            }
        }
    }
}

