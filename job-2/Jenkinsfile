pipeline {
    agent any

    environment {
        DOCKERHUB_USERNAME = credentials('dockerhub_username')
        DOCKERHUB_PASSWORD = credentials('dockerhub_password')
    }

    stages {
        stage('Download Jar from JFROG') {
            environment {
                JFROG_PASSWORD = credentials('token_jfrog')
            }
            steps {
                sh 'curl -u admin:$JFROG_PASSWORD -XGET http://artifactory:8082/artifactory/tema-final-1-job-1/Tema-final-1-0.0.1-SNAPSHOT.jar --output Tema-final-1-0.0.1-SNAPSHOT.jar'
            }
        }

        stage('Downloading Packer and Ansible Config Files') {
            steps {
                git branch: 'master', url: 'https://github.com/Brunna1989/tema-final-1.git'
            }
        }

        stage('Packer execution') {
            steps {
                sh 'apt-get update'
                sh 'packer init job-2/packer-configurations.hcl'
                sh 'packer build job-2/packer-configurations.hcl'
            }
        }

        stage('Login to Docker') {
            steps {
                script {
                    def dockerhubUsername = credentials('dockerhub_username')
                    def dockerhubPassword = credentials('dockerhub_password')

                    withDockerRegistry(url: "https://index.docker.io/v1/", credentialsId: dockerhubUsername) {
                        sh "docker login -u ${dockerhubUsername} -p ${dockerhubPassword}"
                    }
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    def dockerhubUsername = credentials('dockerhub_username')

                    // Fa√ßa o push da imagem para o Docker Hub
                    sh "docker push ${dockerhubUsername}/tema-final-1:0.1"
                }
            }
        }
    }
}

